{
  "openapi": "3.1.0",
  "info": {
    "title": "Spitch API",
    "version": "1.1.0"
  },
  "servers": [
    {
      "url": "https://api.spi-tch.com"
    }
  ],
  "paths": {
    "/v1/transcriptions": {
      "post": {
        "summary": "Transcribe",
        "operationId": "transcribe_v1_transcriptions_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_transcribe_v1_transcriptions_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transcription"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [{ "ApiKeyAuth": [] }]
      }
    },
    "/v1/speech": {
      "post": {
        "summary": "Synthesize",
        "operationId": "synthesize_v1_speech_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Speech"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/wav": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "x-responseType": "file"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Python",
            "label": "Synthesize",
            "source": "import requests\n\nurl = \"https://api.spi-tch.com/v1/synthesize\"\n\npayload = {\n  \"language\": \"en\",\n  \"voice\": \"sade\",\n  \"text\": \"<string>\"\n}\nheaders = {\"Authorization\": \"Bearer YOUR_API_KEY\"}\n\nresponse = requests.post(url, json=payload)\n\nwith open(\"output.wav\", \"wb\") as f:\n    f.write(response.content)\n"
          }
        ],
        "security": [{ "ApiKeyAuth": [] }]
      }
    },
    "/v1/translate": {
      "post": {
        "summary": "Translate",
        "operationId": "translate_v1_translate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Translate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [{ "ApiKeyAuth": [] }]
      }
    },
    "/v1/diacritics": {
      "post": {
        "summary": "Tone Mark",
        "operationId": "tone_mark_v1_diacritics_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToneMark"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Diacritics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [{ "ApiKeyAuth": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "Body_transcribe_v1_transcriptions_post": {
        "properties": {
          "model": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/STTModelEnum"
              },
              {
                "type": "null"
              }
            ],
            "default": "legacy"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "content": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "special_words": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Words",
            "default": ""
          },
          "timestamp": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TimestampEnum"
              },
              {
                "type": "null"
              }
            ],
            "default": "none"
          }
        },
        "type": "object",
        "required": [
          "language"
        ],
        "title": "Body_transcribe_v1_transcriptions_post"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Diacritics": {
        "properties": {
          "request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Request Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "text"
        ],
        "title": "Diacritics"
      },
      "Language": {
        "type": "string",
        "enum": [
          "yo",
          "en",
          "ha",
          "ig",
          "am"
        ],
        "title": "Language"
      },
      "Voice": {
        "type": "string",
        "enum": [
          "sade",
          "segun",
          "femi",
          "funmi",
          "amina",
          "aliyu",
          "hasan",
          "zainab",
          "john",
          "jude",
          "lina",
          "lucy",
          "henry",
          "kani",
          "ngozi",
          "amara",
          "obinna",
          "ebuka",
          "hana",
          "selam",
          "tena",
          "tesfaye"
        ],
        "title": "Voice"
      },
      "Speech": {
        "properties": {
          "model": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSModelEnum"
              },
              {
                "type": "null"
              }
            ],
            "default": "legacy"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "voice": {
            "$ref": "#/components/schemas/Voice"
          }
        },
        "type": "object",
        "required": [
          "language",
          "text",
          "voice"
        ],
        "title": "Speech"
      },
      "TTSModelEnum": {
        "type": "string",
        "enum": [
          "legacy"
        ],
        "title": "TTSModelEnum"
      },
      "STTModelEnum": {
        "type": "string",
        "enum": [
          "mansa_v1",
          "legacy"
        ],
        "title": "STTModelEnum"
      },
      "TimeStamp": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "start": {
            "type": "number",
            "title": "Start"
          },
          "end": {
            "type": "number",
            "title": "End"
          }
        },
        "type": "object",
        "required": [
          "text",
          "start",
          "end"
        ],
        "title": "TimeStamp"
      },
      "TimestampEnum": {
        "type": "string",
        "enum": [
          "sentence",
          "word",
          "none"
        ],
        "title": "TimestampEnum"
      },
      "ToneMark": {
        "properties": {
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "language",
          "text"
        ],
        "title": "ToneMark"
      },
      "Transcription": {
        "properties": {
          "request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Request Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "timestamps": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TimeStamp"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamps"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "text"
        ],
        "title": "Transcription"
      },
      "Translate": {
        "properties": {
          "source": {
            "$ref": "#/components/schemas/Language"
          },
          "target": {
            "$ref": "#/components/schemas/Language"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "source",
          "target",
          "text"
        ],
        "title": "Translate"
      },
      "Translation": {
        "properties": {
          "request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Request Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "text"
        ],
        "title": "Translation"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}

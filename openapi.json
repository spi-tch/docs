{
  "openapi": "3.1.0",
  "info": {
    "title": "Spitch API",
    "version": "1.1.0",
    "description": "The Spitch API provides comprehensive voice AI capabilities for African languages, including speech synthesis, transcription, translation, and tone marking. Built with accuracy and cultural authenticity in mind."
  },
  "servers": [
    {
      "url": "https://api.spi-tch.com",
      "description": "Production API server"
    }
  ],
  "paths": {
    "/v1/transcriptions": {
      "post": {
        "tags": ["Speech-to-Text"],
        "summary": "Transcribe Audio",
        "description": "Convert audio files to text with support for African languages. Upload a file or provide a URL to transcribe speech with configurable models and timestamp options.",
        "operationId": "transcribe_v1_transcriptions_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_transcribe_v1_transcriptions_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transcription completed successfully. Returns the transcribed text with optional timestamps and metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transcription"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed. Check required parameters and file formats.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [{ "ApiKeyAuth": [] }]
      }
    },
    "/v1/speech": {
      "post": {
        "tags": ["Text-to-Speech"],
        "summary": "Generate Speech",
        "description": "Convert text to natural-sounding speech with support for African languages. Choose from multiple voices and audio formats to create high-quality speech synthesis.",
        "operationId": "synthesize_v1_speech_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Speech"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Audio generated successfully. Returns the synthesized audio in the requested format (wav, mp3, etc.).",
            "content": {
              "audio/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed. Check required parameters and file formats.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [{ "ApiKeyAuth": [] }]
      }
    },
    "/v1/translate": {
      "post": {
        "tags": ["Translation"],
        "summary": "Translate Text",
        "description": "Translate text between supported languages with high accuracy. Support for both machine and human translation models, with specialized performance for African languages.",
        "operationId": "translate_v1_translate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Translate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Translation completed successfully. Returns the translated text with optional delivery information for human translations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed. Check required parameters and file formats.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [{ "ApiKeyAuth": [] }]
      }
    },
    "/v1/diacritics": {
      "post": {
        "tags": ["Text Processing"],
        "summary": "Add Tone Marks",
        "description": "Add diacritical marks to text for proper pronunciation in tonal languages. Essential for accurate speech synthesis in languages like Yoruba that rely on tone for meaning.",
        "operationId": "tone_mark_v1_diacritics_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToneMark"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Tone marking completed successfully. Returns the text with proper diacritical marks for accurate pronunciation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Diacritics"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed. Check required parameters and file formats.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [{ "ApiKeyAuth": [] }]
      }
    },
    "/v1/files": {
      "post": {
        "tags": ["File Management"],
        "summary": "Upload File",
        "description": "Upload a file to the Spitch server for processing. Supports various audio and document formats.",
        "operationId": "upload_file_v1_files_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_v1_files_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileMetaResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed. Check required parameters and file formats.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["File Management"],
        "summary": "List Files",
        "description": "Get a paginated list of uploaded files with optional filtering by status. Supports pagination with cursor-based navigation.",
        "operationId": "get_files_v1_files_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMaximum": 100,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "uploading",
                    "ready"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFilesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed. Check required parameters and file formats.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/files/{file_id}": {
      "get": {
        "tags": ["File Management"],
        "summary": "Get File Metadata",
        "description": "Retrieve detailed metadata for a specific file including upload information, processing status, and file properties.",
        "operationId": "get_file_v1_files__file_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileMetaResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed. Check required parameters and file formats.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["File Management"],
        "summary": "Delete File",
        "description": "Permanently delete a file and its associated storage. This action cannot be undone.",
        "operationId": "delete_file_v1_files__file_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Request validation failed. Check required parameters and file formats.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/files/{file_id}/url": {
      "get": {
        "tags": ["File Management"],
        "summary": "Generate Download URL",
        "description": "Generate a secure, time-limited download URL for a file. The URL expires after the specified time-to-live (TTL) period.",
        "operationId": "download_file_v1_files__file_id__url_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "File Id"
            }
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 3600,
              "minimum": 60,
              "default": 60,
              "title": "Ttl"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDownloadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed. Check required parameters and file formats.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/files:usage": {
      "get": {
        "tags": ["File Management"],
        "summary": "Get Storage Usage",
        "description": "Get detailed storage usage statistics including total storage, used space, and file count for your organization.",
        "operationId": "get_usage_v1_files_usage_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUsage"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Body_transcribe_v1_transcriptions_post": {
        "properties": {
          "model": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/STTModelEnum"
              },
              {
                "type": "null"
              }
            ],
            "default": "legacy"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "content": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "special_words": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Words",
            "default": ""
          },
          "timestamp": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TimestampEnum"
              },
              {
                "type": "null"
              }
            ],
            "default": "none"
          }
        },
        "type": "object",
        "required": [
          "language"
        ],
        "title": "Body_transcribe_v1_transcriptions_post"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Diacritics": {
        "properties": {
          "request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Request Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "text"
        ],
        "title": "Diacritics",
        "description": "Response model for text diacritization requests.\n    \n    Attributes:\n        request_id: Unique identifier for the diacritization request\n        text: Text with added diacritical marks for proper pronunciation\n        language: Language code for the diacritized text"
      },
      "Language": {
        "type": "string",
        "enum": [
          "yo",
          "en",
          "ha",
          "ig",
          "am"
        ],
        "title": "Language"
      },
      "Voice": {
        "type": "string",
        "enum": [
          "sade",
          "segun",
          "femi",
          "funmi",
          "amina",
          "aliyu",
          "hasan",
          "zainab",
          "john",
          "jude",
          "lina",
          "lucy",
          "henry",
          "kani",
          "ngozi",
          "amara",
          "obinna",
          "ebuka",
          "hana",
          "selam",
          "tena",
          "tesfaye"
        ],
        "title": "Voice"
      },
      "AudioFormat": {
        "type": "string",
        "enum": [
          "wav",
          "mp3",
          "ogg_opus",
          "webm_opus",
          "flac",
          "pcm_s16le",
          "mulaw",
          "alaw"
        ],
        "title": "Audio Format"
      },
      "Speech": {
        "properties": {
          "model": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSModelEnum"
              },
              {
                "type": "null"
              }
            ],
            "default": "legacy"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "voice": {
            "$ref": "#/components/schemas/Voice"
          },
          "format": {
            "$ref": "#/components/schemas/AudioFormat",
            "default": "wav"
          }
        },
        "type": "object",
        "required": [
          "language",
          "text",
          "voice"
        ],
        "title": "Speech",
        "description": "A request to generate speech in dataset.\n\nAttributes:\n    language: the language of the text to be generated\n    text: the text for which audio is to be generated\n    voice: the voice to use to generate the audio\n    model: the model to use to generate the audio\n    format: the output format of the audio file"
      },
      "TTSModelEnum": {
        "type": "string",
        "enum": [
          "legacy"
        ],
        "title": "TTSModelEnum"
      },
      "STTModelEnum": {
        "type": "string",
        "enum": [
          "mansa_v1",
          "legacy",
          "human"
        ],
        "title": "STTModelEnum"
      },
      "TimeStamp": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "start": {
            "type": "number",
            "title": "Start"
          },
          "end": {
            "type": "number",
            "title": "End"
          }
        },
        "type": "object",
        "required": [
          "text",
          "start",
          "end"
        ],
        "title": "TimeStamp"
      },
      "TimestampEnum": {
        "type": "string",
        "enum": [
          "sentence",
          "word",
          "none"
        ],
        "title": "TimestampEnum"
      },
      "ToneMark": {
        "properties": {
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "language",
          "text"
        ],
        "title": "ToneMark",
        "description": "Tone marking (diacritics) task model.\n    \n    Defines parameters for adding diacritical marks to text\n    in languages that use tone markings."
      },
      "Transcription": {
        "properties": {
          "request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Request Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "timestamps": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TimeStamp"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamps"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "text"
        ],
        "title": "Transcription"
      },
      "Translate": {
        "properties": {
          "source": {
            "$ref": "#/components/schemas/Language"
          },
          "target": {
            "$ref": "#/components/schemas/Language"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text",
            "default": ""
          },
          "model": {
            "type": "string",
            "enum": [
              "human",
              "auto"
            ],
            "title": "Model",
            "default": "auto"
          },
          "file_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Id"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          }
        },
        "type": "object",
        "required": [
          "source",
          "target"
        ],
        "title": "Translate",
        "description": "Translation task model.\n\nDefines parameters for text translation between languages,\nincluding source/target languages, model selection, and\noptional custom instructions."
      },
      "Translation": {
        "properties": {
          "request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Request Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "text"
        ],
        "title": "Translation",
        "description": "Translation result model.\n\nAttributes:\n    request_id (UUID): Unique ID for this request.\n    text: translated text.\n    due_date: used when model is `human`. the date you can expect the translation to be delivered"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "Body_upload_file_v1_files_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_file_v1_files_post"
      },
      "FileMetaResponse": {
        "properties": {
          "file_id": {
            "type": "string",
            "format": "uuid",
            "title": "File Id"
          },
          "status": {
            "type": "string",
            "enum": [
              "uploading",
              "ready"
            ],
            "title": "Status"
          },
          "original_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Name"
          },
          "size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size Bytes"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "uploaded_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uploaded By"
          }
        },
        "type": "object",
        "required": [
          "file_id",
          "status",
          "original_name",
          "size_bytes",
          "content_type",
          "category",
          "created_at"
        ],
        "title": "FileMetaResponse",
        "description": "description of a file.\nAttributes:\n    file_id: unique identifier for the file.\n    status: status of the file, `processing` or `ready`\n    original_name: original name of the file. If the file was uploaded via API"
      },
      "FileUsage": {
        "properties": {
          "total": {
            "type": "string",
            "title": "Total"
          },
          "used": {
            "type": "string",
            "title": "Used"
          },
          "total_bytes": {
            "type": "integer",
            "title": "Total Bytes"
          },
          "used_bytes": {
            "type": "integer",
            "title": "Used Bytes"
          },
          "num_files": {
            "type": "integer",
            "title": "Num Files"
          }
        },
        "type": "object",
        "required": [
          "total",
          "used",
          "total_bytes",
          "used_bytes",
          "num_files"
        ],
        "title": "FileUsage",
        "description": "Storage usage information for an organization.\n\nAttributes:\n    total: Human-readable total storage limit\n    used: Human-readable used storage amount\n    total_bytes: Total storage limit in bytes\n    used_bytes: Used storage amount in bytes\n    num_files: Number of files stored"
      },
      "FileDownloadResponse": {
        "properties": {
          "file_id": {
            "type": "string",
            "format": "uuid",
            "title": "File Id"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "file_id",
          "url",
          "expires_at"
        ],
        "title": "FileDownloadResponse",
        "description": "Response model for file download URLs.\n\nAttributes:\n    file_id: Unique identifier for the file\n    url: Pre-signed download URL\n    expires_at: When the download URL expires"
      },
      "ListFilesResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FileMetaResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ListFilesResponse",
        "description": "Response model for listing files.\n\nAttributes:\n    items: List of file metadata responses\n    next_cursor: Optional cursor for pagination to get next page of results"
      },
      "ResponseStatus": {
        "properties": {
          "status": {
            "type": "boolean",
            "title": "Status"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
